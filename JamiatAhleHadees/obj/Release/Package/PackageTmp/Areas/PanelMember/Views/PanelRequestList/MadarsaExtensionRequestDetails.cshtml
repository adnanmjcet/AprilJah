@model CommonLayer.CommonModels.MadarsaExtensionRequestModel

@{
    ViewBag.Title = "MadarsaExtensionRequestDetails";
}

<div>
    <h4>Madarsa Extension Request</h4>
    <hr />


    @*@using (Html.BeginForm("ApproveReject", "RequestApprove", FormMethod.Post))
    {*@
    <div class="row">
        <div class="col-lg-5">
            <dl class="dl-horizontal">

                <dt>
                    @Html.DisplayNameFor(model => model.ShortDescription)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ShortDescription)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.UserId)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.UserId)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Area)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Area)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.MadarsaId)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MadarsaId)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ConstructionCost)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ConstructionCost)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.ExistingFloors)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ExistingFloors)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.AmountNeeded)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.AmountNeeded)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Engineer)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Engineer)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Elevation)
                </dt>

                <dd>
                    @{ var base64Elev = Convert.ToBase64String(Model.Elevation);
                        var ElevImg = string.Format("data:image/jpg;base64,{0}", base64Elev);
                    }

                    <div class="row">
                        <div class="col-md-4">
                            <div class="thumbnail">
                                <a href='@ElevImg'>
                                    <img src='@ElevImg' alt="Lights" style="width:100%">

                                </a>
                            </div>
                        </div>
                    </div>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Paln)
                </dt>

                <dd>
                    @{ var baseplan = Convert.ToBase64String(Model.Paln);
                        var PlanImg = string.Format("data:image/jpg;base64,{0}", baseplan);
                    }

                    <div class="row">
                        <div class="col-md-4">
                            <div class="thumbnail">
                                <a href='@PlanImg'>
                                    <img src='@PlanImg' alt="Lights" style="width:100%">

                                </a>
                            </div>
                        </div>
                    </div>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Doc1)
                </dt>

                <dd>

                    @{ var baseDoc1 = Convert.ToBase64String(Model.Doc1);
                        var Doc1Img = string.Format("data:image/jpg;base64,{0}", baseDoc1);
                    }

                    <div class="row">
                        <div class="col-md-4">
                            <div class="thumbnail">
                                <a href='@Doc1Img'>
                                    <img src='@Doc1Img' alt="Lights" style="width:100%">

                                </a>
                            </div>
                        </div>
                    </div>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Doc2)
                </dt>

                <dd>
                    @{ 
                        string baseDoc2 = string.Empty;
                        string Doc2Img = string.Empty;
                        if (Model.Doc2 != null)
                        {
                            baseDoc2 = Convert.ToBase64String(Model.Doc2);
                            Doc2Img = string.Format("data:image/jpg;base64,{0}", baseDoc2);
                        }
                    }

                    <div class="row">
                        <div class="col-md-4">
                            <div class="thumbnail">
                                <a href='@Doc2Img'>
                                    <img src='@Doc2Img' alt="Lights" style="width:100%">

                                </a>
                            </div>
                        </div>
                    </div>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Doc3)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Doc3)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Pic1)
                </dt>

                <dd>
                    @{ var basePic1 = Convert.ToBase64String(Model.Pic1);
                        var Pic1Img = string.Format("data:image/jpg;base64,{0}", basePic1);
                    }

                    <div class="row">
                        <div class="col-md-4">
                            <div class="thumbnail">
                                <a href='@Pic1Img'>
                                    <img src='@Pic1Img' alt="Lights" style="width:100%">

                                </a>
                            </div>
                        </div>
                    </div>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Pic2)
                </dt>

                <dd>
                    @{ var basePic2 = Convert.ToBase64String(Model.Pic2);
                        var Pic2Img = string.Format("data:image/jpg;base64,{0}", basePic2);
                    }

                    <div class="row">
                        <div class="col-md-4">
                            <div class="thumbnail">
                                <a href='@Pic2Img'>
                                    <img src='@Pic2Img' alt="Lights" style="width:100%">

                                </a>
                            </div>
                        </div>
                    </div>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Pic3)
                </dt>

                @*
                <dd>
                    @{ var basePic3 = Convert.ToBase64String(Model.Pic3);
                    var Pic3Img = string.Format("data:image/jpg;base64,{0}", basePic3);
                    }

                    <div class="row">
                        <div class="col-md-4">
                            <div class="thumbnail">
                                <a href='@Pic3Img'>
                                    <img src='@Pic3Img' alt="Lights" style="width:100%">

                                </a>
                            </div>
                        </div>
                    </div>
                </dd>*@
                <dt>
                    @Html.DisplayNameFor(model => model.RequestSubmitId)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.RequestSubmitId)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Status)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Status)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CreatedDate)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CreatedBy)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CreatedBy)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.RequestTypeId)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.RequestTypeId)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.UserName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.UserName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.MadarsaName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MadarsaName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.RequestTypeName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.RequestTypeName)
                </dd>

            </dl>
        </div>


        <div class="col-lg-4">

            <table class="table table-bordered">

                <tfoot>

                    <tr>
                        <td>

                            @*<button class="btn btn-success btn-sm" type="button" id="btnAcceptRequest">

                            @*<span class="glyphicon glyphicon-thumbs-up" style="font-size:30px;"></span>
                            </button>
                            <button class="btn btn-danger btn-sm" type="button" id="btnAcceptReject">
                            <span class="glyphicon glyphicon-thumbs-down" style="font-size:30px;"></span>
                            </button>*@

                            @{
                                string btnColorLike = string.Empty;
                                string btnColorDisLike = string.Empty;
                                if (Model.LikeStatus != null && Model.LikeStatus == true)
                                {
                                    btnColorLike = "green";
                                }
                                else if (Model.LikeStatus != null && Model.LikeStatus == false)
                                {
                                    btnColorDisLike = "red";
                                }
                                else
                                {
                                    btnColorLike = btnColorDisLike = "";
                                }

                                string cssBtnColorAgree = string.Empty;
                                string cssBtnColorDisAgree = string.Empty;
                                if (Model.IsAgreed != null && Model.IsAgreed == true)
                                {
                                    cssBtnColorAgree = "success";
                                }
                                else if (Model.IsAgreed != null && Model.IsAgreed == false)
                                {
                                    cssBtnColorDisAgree = "danger";
                                }
                                else
                                {
                                    cssBtnColorAgree = cssBtnColorDisAgree = "default";
                                }
                            }
                            @if (Model.IsPanelHeadUser && Model.IsPanelInvolved)
                            {
                               

                            <button class="btn-lg btn-@cssBtnColorAgree" type="button" id="btnAgree">
                                 Agree
                            </button>
                            <button class="btn-lg btn-@cssBtnColorDisAgree" type="button" id="btnDisAgree">
                                DisAgree
                            </button>

                          <br />
                        <br />
                                <button class="btn-lg btn-default  " type="button" id="btnLike">
                                    <span class="glyphicon glyphicon-thumbs-up" style="font-size:30px;color:@btnColorLike ;"></span>
                                </button>

                                <button class="btn-lg btn-default  " type="button" id="btnDisLike">
                                    <span class="glyphicon glyphicon-thumbs-down" style="font-size:30px;color:@btnColorDisLike ;"></span>
                                </button>
                            }
                            else if (Model.IsPanelInvolved)
                            {                                
                                <button class="btn-lg btn-default  " type="button" id="btnLike">
                                    <span class="glyphicon glyphicon-thumbs-up" style="font-size:30px;color:@btnColorLike ;"></span>
                                </button>

                                <button class="btn-lg btn-default  " type="button" id="btnDisLike">
                                    <span class="glyphicon glyphicon-thumbs-down" style="font-size:30px;color:@btnColorDisLike ;"></span>
                                </button>

                            }
                            else
                            {
                                <button class="btn-lg btn-danger  " type="button" id="btnObject">
                                    <span class="glyphicon glyphicon-ban-circle" style="font-size:30px;"></span>
                                </button>

                            }
                    </tr>
                </tfoot>
            </table>


            <div class="row">
                <div class="form-group">
                    <label>Comment</label>
                    <textarea class="form-control" id="txtComment"></textarea>
                    <br />
                    <button type="button" id="btnPostComment" class="btn  btn-primary">Post Comment</button>
                </div>
            </div>
        </div>
        <div class="col-lg-3">
            <table class="table table-hover table-condensed">
                <thead>
                    <tr>
                        <td><b>Comments</b></td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.PanelCommentList)
                    {
                    <tr>
                        <td>
                            @item.Comment
                            <b><br />@item.UserName ,@item.UserTypeName</b><br />@item.CreatedDate
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>


@using (Html.BeginForm())
{
    <input type="hidden" value="@Model.MemberOpinionId" name="@Model.MemberOpinionId" id="txtMemberOpinionId" />
    

    <input type="hidden" value="@Model.AlreadyExistsInMemberOpinion.ToString()" name="AlreadyExistsInMemberOpinion" id="txtAlreadyExst" />
<input type="hidden" value="@Model.UserId" name="@Model.UserId" id="txtUserId" />
<input type="hidden" value="@Model.IsAgreed.ToString()" name="IsAgreed" id="txtIsAgreed" />
<input type="hidden" value="@Model.LikeStatus.ToString()" name="@Model.LikeStatus" id="txtLikeStatus" />
<input type="hidden" value="@Model.RequestSubmitId" name="@Model.RequestSubmitId" id="txtRequestSubmitId" />
<input type="hidden" value="@Model.RequestTypeId" name="@Model.RequestTypeId" id="txtRequestTypeId" />
}
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        $(document).on("click", "#btnAgree,#btnDisAgree,#btnLike,#btnDisLike,#btnObject", function (e) {
            //var url=
            var status = $("#txtIsAgreed").val();
            if ($(this).attr("id") == "btnAgree") {
                status = true;
            }
           else if ($(this).attr("id") == "btnDisAgree") {
               status = false;
           }

            var likeStatus = $("#txtLikeStatus").val();
            if ($(this).attr("id") == "btnLike") {
                likeStatus = true;
            }
            else if ($(this).attr("id") == "btnDisLike") {
                likeStatus = false;
            }

            var IsObject = false;
            var IsObjectClicked = false;
            if ($(this).attr("id") == "btnObject") {
                IsObject = true;
                IsObjectClicked = true;
            }
            var _panelModel = {
                MemberOpinionId: $("#txtMemberOpinionId").val(),
                AlreadyExistsInMemberOpinion: $("#txtAlreadyExst").val(),
                UserId: $("#txtUserId").val(),
                RequestSubmitId: $("#txtRequestSubmitId").val(),
                Status: status,
                LikeStatus: likeStatus,
                IsObject: IsObject,
                IsObjectClicked: IsObjectClicked
            };
            buttonDisabledReg();
            $.ajax({
                url: folderBaseUrl + "/PanelMember/PanelAgreeDisagree/ARMadarsaExtension",
                type: "POST",
                data: _panelModel,
                success: function (response) {
                    //  $("#listCategory").empty().append(response);
                    location.reload();
                    buttonEnableReg();
                },
                error: function (err) {
                    toastr.error("Registration failed: Internal server error");
                    buttonEnableReg();
                    console.log(err);
                }
            });
        });

        $(document).on("click", "#btnPostComment", function (e) {
            var _registrationModel = {
                UserId: $("#txtUserId").val(),
                RequestSubmitId: $("#txtRequestSubmitId").val(),
                Comment: $("#txtComment").val(),

            };
            buttonDisabledReg();
            $.ajax({
                url: folderBaseUrl + "/PanelMember/PanelRequestComment/CommentOnMadarsaExtensionRequest",
                type: "POST",
                data: _registrationModel,
                success: function (response) {
                    //  $("#listCategory").empty().append(response);
                    location.reload();
                    buttonEnableReg();
                },
                error: function (err) {
                    toastr.error("Registration failed: Internal server error");
                    buttonEnableReg();


                    console.log(err);
                }
            });
        });
    });

    function buttonEnableReg() {
        $("#btnAcceptRequest span,#btnAcceptReject span").hide();
        $("#btnAcceptRequest,#btnAcceptReject").prop("disabled", false);
    }


    function buttonDisabledReg() {
        $("#btnAcceptRequest span,#btnAcceptReject span").show();
        $("#btnAcceptRequest,#btnAcceptReject").prop("disabled", true);
    }

</script>